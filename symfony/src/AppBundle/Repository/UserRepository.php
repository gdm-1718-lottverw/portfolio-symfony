<?php

namespace AppBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
     public function getUser($id){
        $q = $this->createQueryBuilder('user')
            ->select('user')
            ->where('user.id = :id')->setParameter('id', $id)
            ->getQuery()
            ->getOneOrNullResult();
        
        return $q;
    }


    
    public function getUserByUsername($username){
        $q = $this->createQueryBuilder('user')
            ->select('user')
            ->where('user.username = :username')->setParameter('username', $username)
            ->andWhere('user.enabled = true')
            ->getQuery()
            ->getOneOrNullResult();
        
        return $q;
    }



    public function getSimpleUser(){
        $q = $this->createQueryBuilder('user')
            ->select('user.username, user.id')
            ->andWhere('user.enabled = true')
            ->getQuery()
            ->getArrayResult();

        return $q;
    }

    public function getProfileByUsername($username){
        $q = $this->createQueryBuilder('user')
            ->leftJoin('user.attachments', 'a')
            ->select('user, a')
            ->where('user.username = :username')->setParameter('username', $username)
            ->andWhere('user.enabled = true')
            ->andWhere('a.deletedAt is NULL')
            ->getQuery()
            ->getOneOrNullResult();

        return $q;
    }


    public function getUserById($id){
        $q = $this->createQueryBuilder('user')
            ->select('user')
            ->where('user.id = :id')->setParameter('id', $id)
            ->getQuery()
            ->getArrayResult();

        return $q;
    }

    public function getUserProfile(){
        $q = $this->createQueryBuilder('user')
            ->leftJoin('user.profile', 'p')
            ->leftJoin('user.groups', 'g')
            ->select('user,p, g')
            ->andWhere('user.enabled = true')
            ->getQuery()
            ->getArrayResult();

        return $q;
    }
}
